package chapter11_2

// 一种测试分类的方法是基于测试者是否需要了解被测试对象的内部工作原理。
// 黑盒测试只需要测试包公开的文档和API行为，内部实现对测试代码是透明的。
// 相反，白盒测试有访问包内部函数和数据结构的权限，因此可以做到一些普通客户端无法实现的测试。例如，一个白盒测试可以在每个操作之后检测不变量的数据类型。

// 黑盒和白盒这两种测试方法是互补的。
// 黑盒测试一般更健壮，随着软件实现的完善测试代码很少需要更新。它们可以帮助测试者了解真实客户的需求，也可以帮助发现API设计的一些不足之处。
// 相反，白盒测试则可以对内部一些棘手的实现提供更多的测试覆盖。

// 我们已经看到两种测试的例子。
// TestIsPalindrome测试仅仅使用导出的IsPalindrome函数，因此这是一个黑盒测试。
// TestEcho测试则调用了内部的echo函数，并且更新了内部的out包级变量，这两个都是未导出的，因此这是白盒测试。

// 当我们准备TestEcho测试的时候，我们修改了echo函数使用包级的out变量作为输出对象，因此测试代码可以用另一个实现代替标准输出，这样可以方便对比echo输出的数据。
// 使用类似的技术，我们可以将产品代码的其他部分也替换为一个容易测试的伪对象。
// 使用伪对象的好处是我们可以方便配置，容易预测，更可靠，也更容易观察。同时也可以避免一些不良的副作用，例如更新生产数据库或信用卡消费行为。
